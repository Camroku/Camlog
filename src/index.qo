#!/usr/local/bin/qo
include lib.wutils;
include lib.qomar;
include lib.sort;
include qcf;
include qo;

qcf.new("config.qcf", &config);

config.author = config.get("author");
author = config.author;

route = deleteAfter(qo.env("REQUEST_URI"), '?');

header = format(read("views/header.html"));

func deleteBlank(list)
{
    outlist = [];
    foreach &element in list
    {
        if (element != "") {
            outlist += [element];
        };
    };
    return outlist;
};

if (route == "/")
{
    pagelist = [];
    datelist = [];
    foreach &page in filelist("./pages")
    {
        pagecontent = read("pages/" + page);
        splitted = split(pagecontent, %"\n-----\n");
        metadata = split(splitted[0], %"\n");
        foreach &data in metadata
        {
            datasplitted = split(data, " ");
            datasplitted = deleteBlank(datasplitted);
            if (datasplitted[0] == "title")
            {
                pagename = join(datasplitted[1:], " ");
            }
            else if (datasplitted[0] == "date")
            {
                date = toInt(datasplitted[1]);
            };
        };
        pagelist += [[page, pagename]];
        datelist += [date];
    };
    ret = sort.sortbyvalr(pagelist, datelist);
    pages = ret[0];
    datelist = ret[1];
    remove(ret);
    pagelist = "";
    i = 0;
    foreach &page in pages
    {
        pagelink = replace(page[0], ".qm", "");
        pagename = page[1];
        pagedate = formatdate(datelist[i], '%Y-%m-%d %H:%M:%S');
        pagelist += %"<h3><a href=\"/p/$pagelink\">$pagename</a><span style=\"font-size: 10px;\"> $pagedate</span></h3>";
        i += 1;
    };
    content = format(read("views/index.html"));
    wutils.htmlPage(content);
}
else
{
    splitted = split(route, "/");
    splitted = deleteBlank(splitted);
    if (splitted[0] == "p") {
        if (len(splitted) == 1) {
            wutils.redirect("/");
        } else {
            pagecontent = read("pages/" + splitted[1] + ".qm");
            if (pagecontent == None) {
                wutils.error("404 Not Found");
            } else {
                splitted = split(pagecontent, %"\n-----\n");
                pagecontent = qomar.compile.html(join(splitted[1:], %"\n-----\n"));
                metadata = split(splitted[0], %"\n");
                taglist = [];
                foreach &data in metadata
                {
                    datasplitted = split(data, " ");
                    datasplitted = deleteBlank(datasplitted);
                    if (datasplitted[0] == "title")
                    {
                        page = join(datasplitted[1:], " ");
                    }
                    else if (datasplitted[0] == "date")
                    {
                        date = formatdate(toInt(datasplitted[1]), '%Y-%m-%d %H:%M:%S');
                    }
                    else if (datasplitted[0] == "author")
                    {
                        author = join(datasplitted[1:], " ");
                    }
                    else if (datasplitted[0] == "tag")
                    {
                        tag = datasplitted[1];
                        taglist += [%"<a href=\"/t/$tag\">#$tag</a>"];
                    };
                };
                taglist = join(taglist, ", ");
                content = format(read("views/page.html"));
                wutils.htmlPage(content);
            };
        };
    } else if (splitted[0] == "a") {
        if (len(splitted) == 1) {
            userlist = "";
            foreach &user in filelist("./authors")
            {
                username = replace(user, ".qm", "");
                userlist += %"<h3><a href=\"/a/$username\">$username</a></h3>";
            };
            content = format(read("views/authors.html"));
            wutils.htmlPage(content);
        } else {
            pagecontent = read("authors/" + splitted[1] + ".qm");
            if (pagecontent == None) {
                wutils.error("404 Not Found");
            } else {
                username = splitted[1];
                splitted = split(pagecontent, %"\n-----\n");
                pagecontent = qomar.compile.html(join(splitted[1:], %"\n-----\n"));
                metadata = split(splitted[0], %"\n");
                realname = "Unknown";
                pfp = "";
                links = [];
                foreach &data in metadata
                {
                    datasplitted = split(data, " ");
                    datasplitted = deleteBlank(datasplitted);
                    if (datasplitted[0] == "realname")
                    {
                        realname = join(datasplitted[1:], " ");
                    }
                    else if (datasplitted[0] == "pfp")
                    {
                        pfp = join(datasplitted[1:], " ");
                    }
                    else if (datasplitted[0] == "link")
                    {
                        data = split(join(datasplitted[1:], " "), " | ");
                        links += [%"<a href=\"" + data[1] + %"\">" + data[0] + "</a>"];
                    };
                };
                if (pfp == "")
                {
                    pfp = "https://ui-avatars.com/api/?name=" + replace(realname, " ", "+");
                };
                links = join(links, " | ");
                pagelist = [];
                datelist = [];
                foreach &page in filelist("./pages")
                {
                    pagcontent = read("pages/" + page);
                    splitted = split(pagcontent, %"\n-----\n");
                    metadata = split(splitted[0], %"\n");
                    foundAuthor = False;
                    isAuthor = False;
                    foreach &data in metadata
                    {
                        datasplitted = split(data, " ");
                        datasplitted = deleteBlank(datasplitted);
                        if (datasplitted[0] == "author")
                        {
                            foundAuthor = True;
                            if (join(datasplitted[1:], " ") == username)
                            {
                                isAuthor = True;
                            };
                        }
                        else if (datasplitted[0] == "date")
                        {
                            date = toInt(datasplitted[1]);
                        }
                        else if (datasplitted[0] == "title")
                        {
                            title = join(datasplitted[1:], " ");
                        };
                    };
                    if (foundAuthor == False) {
                        isAuthor = (username == config.author);
                    };
                    if (isAuthor) {
                        pagelist += [[page, title]];
                        datelist += [date];
                    };
                };
                ret = sort.sortbyvalr(pagelist, datelist);
                pages = ret[0];
                datelist = ret[1];
                remove(ret);
                pagelist = "";
                i = 0;
                foreach &page in pages
                {
                    pagelink = replace(page[0], ".qm", "");
                    pagename = page[1];
                    pagedate = formatdate(datelist[i], '%Y-%m-%d %H:%M:%S');
                    pagelist += %"<h3><a href=\"/p/$pagelink\">$pagename</a><span style=\"font-size: 10px;\"> $pagedate</span></h3>";
                    i += 1;
                };
                content = format(read("views/author.html"));
                wutils.htmlPage(content);
            };
        };
    } else if (splitted[0] == "t") {
        if (len(splitted) == 1) {
            wutils.redirect("/");
        } else {
            tag = splitted[1];
            pagelist = [];
            datelist = [];
            foreach &page in filelist("./pages")
            {
                pagcontent = read("pages/" + page);
                splitted = split(pagcontent, %"\n-----\n");
                metadata = split(splitted[0], %"\n");
                foundTag = False;
                isTag = False;
                foreach &data in metadata
                {
                    datasplitted = split(data, " ");
                    datasplitted = deleteBlank(datasplitted);
                    if (datasplitted[0] == "tag")
                    {
                        foundTag = True;
                        if (join(datasplitted[1:], " ") == tag)
                        {
                            isTag = True;
                        };
                    }
                    else if (datasplitted[0] == "date")
                    {
                        date = toInt(datasplitted[1]);
                    }
                    else if (datasplitted[0] == "title")
                    {
                        title = join(datasplitted[1:], " ");
                    };
                };
                if (foundTag == False) {
                    isTag = (username == config.author);
                };
                if (isTag) {
                    pagelist += [[page, title]];
                    datelist += [date];
                };
            };
            ret = sort.sortbyvalr(pagelist, datelist);
            pages = ret[0];
            datelist = ret[1];
            remove(ret);
            pagelist = "";
            i = 0;
            foreach &page in pages
            {
                pagelink = replace(page[0], ".qm", "");
                pagename = page[1];
                pagedate = formatdate(datelist[i], '%Y-%m-%d %H:%M:%S');
                pagelist += %"<h3><a href=\"/p/$pagelink\">$pagename</a><span style=\"font-size: 10px;\"> $pagedate</span></h3>";
                i += 1;
            };
            content = format(read("views/tag.html"));
            wutils.htmlPage(content);
        };
    } else if (splitted[0] == "api") {
        if (len(splitted) == 1) {
            wutils.redirect("/");
        } else {
            if (splitted[1] == "authors"){
                if (len(splitted) == 2) {
                    userlist = [];
                    foreach &user in filelist("./authors")
                    {
                        userlist += [replace(user, ".qm", "")];
                    };
                    userlist = join(userlist, %"\n");
                    wutils.plainText(userlist);
                } else if (len(splitted) == 3){
                    pagecontent = read("authors/" + splitted[2] + ".qm");
                    splitted = split(pagecontent, %"\n-----\n");
                    wutils.plainText(splitted[0]);
                } else if (len(splitted) == 4){
                    pagecontent = read("authors/" + splitted[2] + ".qm");
                    toget = splitted[3];
                    authortoget = splitted[2];
                    splitted = split(pagecontent, %"\n-----\n");
                    if (toget == "description") {
                        wutils.plainText(splitted[1]);
                    } else if (toget == "htmldescription") {
                        wutils.plainText(qomar.compile.html(splitted[1]));
                    } else if (toget == "pages") {
                        pagelist = [];
                        foreach &page in filelist("./pages")
                        {
                            pagecontent = read("pages/" + page);
                            splitted = split(pagecontent, %"\n-----\n");
                            metadata = split(splitted[0], %"\n");
                            foundAuthor = False;
                            foreach &data in metadata
                            {
                                datasplitted = split(data, " ");
                                datasplitted = deleteBlank(datasplitted);
                                if (datasplitted[0] == "author")
                                {
                                    foundAuthor = True;
                                    if (join(datasplitted[1:], " ") == authortoget)
                                    {
                                        pagelist += [replace(page, ".qm", "")];
                                    };
                                };
                            };
                            if (foundAuthor == False)
                            {
                                if (config.author == authortoget)
                                {
                                    pagelist += [replace(page, ".qm", "")];
                                };
                            };
                        };
                        wutils.plainText(join(pagelist, %"\n"));
                    } else {
                        retlist = [];
                        arglist = split(splitted[0], %"\n");
                        foreach &arg in arglist
                        {
                            argsplitted = split(arg, " ");
                            argsplitted = deleteBlank(argsplitted);
                            if (argsplitted[0] == toget)
                            {
                                retlist += [join(argsplitted[1:], " ")];
                            };
                        };
                        wutils.plainText(join(retlist, %"\n"));
                    };
                };
            }
            else if (splitted[1] == "pages"){
                if (len(splitted) == 2) {
                    pagelist = [];
                    foreach &page in filelist("./pages")
                    {
                        pagelist += [replace(page, ".qm", "")];
                    };
                    pagelist = join(pagelist, %"\n");
                    wutils.plainText(pagelist);
                } else if (len(splitted) == 3){
                    pagecontent = read("pages/" + splitted[2] + ".qm");
                    splitted = split(pagecontent, %"\n-----\n");
                    wutils.plainText(splitted[0]);
                } else if (len(splitted) == 4){
                    pagecontent = read("pages/" + splitted[2] + ".qm");
                    toget = splitted[3];
                    splitted = split(pagecontent, %"\n-----\n");
                    if (toget == "content") {
                        wutils.plainText(splitted[1]);
                    } else if (toget == "htmlcontent") {
                        wutils.plainText(qomar.compile.html(splitted[1]));
                    } else {
                        retlist = [];
                        arglist = split(splitted[0], %"\n");
                        foreach &arg in arglist
                        {
                            argsplitted = split(arg, " ");
                            argsplitted = deleteBlank(argsplitted);
                            if (argsplitted[0] == toget)
                            {
                                retlist += [join(argsplitted[1:], " ")];
                            };
                        };
                        out = join(retlist, %"\n");
                        if (out == "" && toget == "author") {
                            out = config.author;
                        } else if (out == ""){
                            out = "Unknown";
                        };
                        wutils.plainText(out);
                    };
                };
            } else if (splitted[1] == "tags"){
                if (len(splitted) == 3){
                    tagtoget = splitted[2];
                    pagelist = [];
                    foreach &page in filelist("./pages")
                    {
                        pagecontent = read("pages/" + page);
                        splitted = split(pagecontent, %"\n-----\n");
                        metadata = split(splitted[0], %"\n");
                        foreach &data in metadata
                        {
                            datasplitted = split(data, " ");
                            datasplitted = deleteBlank(datasplitted);
                            if (datasplitted[0] == "tag")
                            {
                                if (datasplitted[1] == tagtoget)
                                {
                                    pagelist += [replace(page, ".qm", "")];
                                };
                            };
                        };
                    };
                    wutils.plainText(join(pagelist, %"\n"));
                };
            };
        };
    } else {
        wutils.error("404 Not Found");
    };
};
