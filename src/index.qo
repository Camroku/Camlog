#!/usr/local/bin/qo
include qo;
include webutil;
include config;

route = deleteAfter(qo.env("REQUEST_URI"), '?');

footer = format(read("views/footer.html"));

func deleteBlank(list)
{
    outlist = [];
    foreach &element in list
    {
        if (element != "") {
            outlist += [element];
        };
    };
    return outlist;
};

if (route == "/")
{
    pagelist = "";
    foreach &page in filelist("./pages")
    {
        pagename = readline("./pages/" + page);
        pagelist += %"<li><a href=\"/p/" + replace(page, ".txt", "") + %".qo\">$pagename</a></li>";
    };
    content = format(read("views/index.html"));
    webutil.htmlPage(content);
}
else
{
    splitted = split(route, "/");
    splitted = deleteBlank(splitted);
    if (splitted[0] == "p") {
        if (len(splitted) == 1) {
            webutil.redirect("/");
        } else {
            pagecontent = read("pages/" + replace(splitted[1], ".qo", ".txt"));
            if (pagecontent == None) {
                webutil.error("404 Not Found");
            } else {
                splitted = split(pagecontent, %"\n-----\n");
                pagecontent = join(splitted[1:], "\n-----\n");
                metadata = split(splitted[0], %"\n");
                page = metadata[0];
                date = formatdate(toInt(metadata[1]), '%Y-%m-%d %H:%M:%S');
                content = format(read("views/page.html"));
                webutil.htmlPage(content);
            };
        };
    } else {
        webutil.error("404 Not Found");
    };
};
