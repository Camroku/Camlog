#!/usr/local/bin/qo
include qo;
include webutil;
include config;
include qomar;

route = deleteAfter(qo.env("REQUEST_URI"), '?');

footer = format(read("views/footer.html"));
header = format(read("views/header.html"));

func deleteBlank(list)
{
    outlist = [];
    foreach &element in list
    {
        if (element != "") {
            outlist += [element];
        };
    };
    return outlist;
};

if (route == "/")
{
    pagelist = "";
    foreach &page in filelist("./pages")
    {
        pagecontent = read("pages/" + page);
        splitted = split(pagecontent, %"\n-----\n");
        metadata = split(splitted[0], %"\n");
        foreach &data in metadata
        {
            datasplitted = split(data, " ");
            datasplitted = deleteBlank(datasplitted);
            if (datasplitted[0] == "title")
            {
                pagename = join(datasplitted[1:], " ");
            };
        };
        pagelist += %"<li><a href=\"/p/" + replace(page, ".qm", "") + %"\">$pagename</a></li>";
    };
    content = format(read("views/index.html"));
    webutil.htmlPage(content);
}
else
{
    splitted = split(route, "/");
    splitted = deleteBlank(splitted);
    if (splitted[0] == "p") {
        if (len(splitted) == 1) {
            webutil.redirect("/");
        } else {
            pagecontent = read("pages/" + splitted[1] + ".qm");
            if (pagecontent == None) {
                webutil.error("404 Not Found");
            } else {
                splitted = split(pagecontent, %"\n-----\n");
                pagecontent = qomar.compile.html(join(splitted[1:], %"\n-----\n"));
                metadata = split(splitted[0], %"\n");
                foreach &data in metadata
                {
                    datasplitted = split(data, " ");
                    datasplitted = deleteBlank(datasplitted);
                    if (datasplitted[0] == "title")
                    {
                        page = join(datasplitted[1:], " ");
                    }
                    else if (datasplitted[0] == "date")
                    {
                        date = formatdate(toInt(datasplitted[1]), '%Y-%m-%d %H:%M:%S');
                    };
                };
                content = format(read("views/page.html"));
                webutil.htmlPage(content);
            };
        };
    } else {
        webutil.error("404 Not Found");
    };
};
